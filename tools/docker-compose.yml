services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    restart: on-failure
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    networks:
      - bridge-network

  mongo:
    image: mongo:7.0.3
    restart: on-failure
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASSWORD}
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - bridge-network

  # Database manager and user inteface
  mongo-express:
    image: mongo-express:1.0.0-20
    restart: on-failure
    ports:
      - 9081:8081
    environment:
      #ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_UI_USERNAME}
      #ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_UI_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_DB_USERNAME}:${MONGO_DB_PASSWORD}@mongo:27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_UI_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_UI_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_UI_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_UI_PASSWORD}
    depends_on:
      - mongo
    networks:
      - bridge-network
  # docker build -t gateway-service:latest -f ./gateway-service/Dockerfile .
  gateway-service:
    image: gateway-service:latest
    restart: on-failure
    ports:
      - 10000:10000
    volumes:
      - ./services.env:/tools/services.env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - bridge-network

  model-service:
    image:  model:latest
    env_file:
      - services.env
    volumes:
      - ./services.env:/tools/services.env
    networks:
      - bridge-network

#docker network create -d bridge bridge-network
networks:
  bridge-network:
    external: true